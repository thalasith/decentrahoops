import { useEffect } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Header from "../../components/Header";
import { WalletSelectorContextProvider } from "../../contexts/WalletSelectorContext";
import { trpc } from "../../utils/trpc";
import { useRouter } from "next/router";
import { RiArrowLeftSFill, RiArrowRightSFill } from "react-icons/ri";

const Home: NextPage = () => {
  const router = useRouter();
  const { gameId } = router.query as { gameId: string };

  const boxscore = trpc.nbaGames.gameById.useQuery({
    gameId: gameId,
  });

  console.log(boxscore?.data);
  return (
    <>
      <Head>
        <title>Decentrahoops</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-gray-800 text-white">
        <WalletSelectorContextProvider>
          <Header />
          {boxscore.isSuccess && (
            <div className="container mx-auto flex min-h-screen flex-col items-center p-4">
              <div className=" flex w-10/12 flex-row items-center justify-center rounded bg-orange-200 text-slate-700">
                <div className="my-2 mr-4 flex w-1/3 items-center justify-end">
                  <div className="flex flex-col">
                    <span className="text-end text-2xl font-semibold">
                      {boxscore?.data.competitors[1].team.displayName}
                    </span>
                    <span className="text-end text-xs">2-8, 2-2 AWAY</span>
                  </div>
                  <img
                    style={{ width: "110px", height: "110px" }}
                    src={boxscore?.data.competitors[1].team.logos[0].href}
                  />
                  <span
                    className={`ml-2 flex text-4xl font-bold ${
                      boxscore?.data.competitors[1].winner
                        ? "text-black"
                        : "text-gray-500"
                    }`}
                  >
                    {boxscore?.data.competitors[1].score}
                    {boxscore?.data.competitors[1].winner && (
                      <RiArrowLeftSFill />
                    )}
                  </span>
                </div>
                <div className="mx-2 flex w-1/3 flex-col items-center justify-center">
                  <span>FINAL</span>
                  <table className="table-auto">
                    <thead>
                      <tr className="border-b border-slate-400">
                        <th className="pr-2"></th>
                        <th className="px-2">1</th>
                        <th className="px-2">2</th>
                        <th className="px-2">3</th>
                        <th className="px-2">4</th>
                        {boxscore?.data.status.type.detail === "Final/OT" && (
                          <th className="px-2">OT</th>
                        )}
                        <th className="px-2 font-semibold">T</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td className="pr-2">
                          {boxscore?.data.competitors[1].team.abbreviation}
                        </td>
                        {boxscore?.data.competitors[1].linescores.map(
                          (line: { displayValue: string }) => (
                            <td className="px-2">{line.displayValue}</td>
                          )
                        )}
                        <td className="px-2 font-semibold">
                          {boxscore?.data.competitors[1].score}
                        </td>
                      </tr>
                      <tr>
                        <td className="pr-2">
                          {boxscore?.data.competitors[0].team.abbreviation}
                        </td>
                        {boxscore?.data.competitors[0].linescores.map(
                          (line: { displayValue: string }) => (
                            <td className="px-2">{line.displayValue}</td>
                          )
                        )}
                        <td className="px-2 font-semibold">
                          {boxscore?.data.competitors[0].score}
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
                <div className="ml-4 flex w-1/3 flex-row items-center justify-start">
                  <span
                    className={`ml-2 flex text-4xl font-bold ${
                      boxscore?.data.competitors[0].winner
                        ? "text-black"
                        : "text-gray-500"
                    }`}
                  >
                    {boxscore?.data.competitors[0].winner && (
                      <RiArrowRightSFill />
                    )}
                    {boxscore?.data.competitors[0].score}
                  </span>
                  <img
                    style={{ width: "110px", height: "110px" }}
                    src={boxscore?.data.competitors[0].team.logos[0].href}
                  />
                  <div className="flex flex-col">
                    <span className="text-start text-2xl font-semibold">
                      {boxscore?.data.competitors[0].team.displayName}
                    </span>
                    <span className="text-start text-xs">2-8, 2-2 HOME</span>
                  </div>
                </div>
              </div>
            </div>
          )}
        </WalletSelectorContextProvider>
      </main>
    </>
  );
};

export default Home;
